import { Controller } from "../Base/Controller";
import { Keyboard } from "../Base/Keyboard";
import { MyContext, MyConversation } from "../Types/ConversationTypes";

export class UserController extends Controller {
  constructor() { super() }

  async createUser(conversation: MyConversation, ctx: MyContext) {

    await ctx.reply(
      '–¢—ã —Ä–µ—à–∏–ª –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É? –û—Ç–ª–∏—á–Ω–æ, –Ω–∞—á–Ω–µ–º —Å —Ç–≤–æ–µ–≥–æ –æ–ø—ã—Ç–∞. –ù–∞–ø–∏—à–∏ –Ω–∞–º –æ –Ω–µ–º!'
    )
    // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–ø—ã—Ç
    const { message: description } = await conversation.wait();

    // @ts-ignore
    await ctx.reply('üîó –•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å —Å–∫–∏–Ω—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Ñ–æ—Ä—É–º–∞ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—ã –ø—Ä–∏—à—ë–ª!');
    // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    const { message: forumLink } = await conversation.wait();

    // @ts-ignore
    await ctx.reply('‚è± –ó–∞–ø–∏—Å–∞–ª! —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤ —É–¥–µ–ª—è—Ç—å —Ä–∞–±–æ—Ç–µ?');
    // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É
    const { message: workTime } = await conversation.wait();

    // –í—ã–≤–æ–¥–∏–º –∞–Ω–∫–µ—Ç—É
    await ctx.reply(
      `üèÆ –ê–Ω–∫–µ—Ç–∞:\n\nüë®üèª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.update.message?.from.id} ${ctx.update.message?.from.username}\n\nüîó –°—Å—ã–ª–∫–∞: ${forumLink?.text}\n\nüß† –û–ø—ã—Ç: ${description?.text}\n\n‚åöÔ∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${workTime?.text}\n\n‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏. –ù–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ –≤—ã —É–∫–∞–∑–∞–ª–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ç–∞–º –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º —ç—Ç–æ –¥–∞—Å—Ç –≤—ã—Å–æ–∫–∏–π —à–∞–Ω—Å –Ω–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤—É.`,
      {
        reply_markup: {
          inline_keyboard: Keyboard.chooseAnket()
        }
      }
    )
  }
}